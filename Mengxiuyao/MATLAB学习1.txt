2014.9.7
1、图像类型转换：
比如要对一幅索引图像的彩色图像进
行滤波, 首先应该将其转换成RGB 图像, 此时再对RGB 图像使用滤波器时, MATLAB 将恰当
地滤掉图像中的部分灰度值
2、什么是图像滤波？？？？？？
3、dither 函数通过抖动算法转换图像类型, 其语法格式为:
X = dither( RGB, map)
X = dither( RGB, map, Qm, Qe)
4、BW = dither( I)
其功能是: 通过抖动将矩阵I 中的灰度图像转换为二进制图像。
5、gray2 ind 函数可以将灰度图像转换成索引图像, 其语法格式为:
[ X, map] = gray2ind( I, n)
其功能是: 按指定的灰度级数n 和颜色图map, 将灰度图像I 转换成索引色图像X, n 的默
认值为64。
6、什么是索引图像？？？？？
7、I = rgb2gray( RGB)
其功能是: 将真彩图像RGB 转换成灰度图像I。
8、RGB = ind2rgb( X, map)
其功能是: 将矩阵X 及相应的颜色图map 转换成真彩图像RGB。实际实现时, 就是产生
一个三维数组, 然后将索引图像的颜色图的颜色值赋予三维数组。输入图像X 可以是双精度
类型或8 位无符号类型, 输出图像RGB 为双精度类型。
9、通过阀值化方法将图像转换为二值图像
BW = im2bw( I, level)
其功能是: 转换灰度图像I 为黑白二值图像。
BW = im2bw( X, map, level)
其功能是: 将带有颜色图map 的索引图像X 转换为黑白二值图像。
BW = im2bw( RGB, level)
其功能是: 将RGB 图像转换为黑白图像。
10、通过阀值化方法从灰度图像产生索引图像
X = grayslice( I, n)
其功能是: 将灰度图像I 均匀量化为n 个等级, 然后转换为伪彩色图像X。
X = grayslice( I, v)
其功能是: 按指定的阀值向量v( 每一个元素都在0 和1 之间) 对图像I 的值域进行划分,
而后转换成索引图像X。
11、将矩阵转换为灰度图像
I = mat2gray( X, [ xmin xmax] )
其功能是: 按指定的取值区间[ xmin xmax] 将数据矩阵X 转换为图像I, xmin 对应灰度0
( 最暗即黑) , xmax 对应灰度1( 最亮即白) 。如果不指定区间[ xmin xmax] 时, MATLAB 则自动
将X 阵中最小设为xmin, 最大设为xmax。
12、过滤
下面的代码首先读取testpat. tif 图形文件, 然后对其进行过滤操作, 再将结果数据显
示出来:
I = imread( ′testpat. tif′) ;
J = filter( [ 1 2; - 1 - 2] , I ) ;
imshow( I) ;
figure, imshow( J, [ ] ) ;
13、图像的点运算
点运算, 也称为对比度增强、对比度拉伸或灰度变换, 是一种通过对图像中的每个像素
( 即像素点上的灰度值) 进行计算, 从而改善图像显示效果的操作
典型的点运算应用包括:
①光度学标定: 通过对图像传感器的非线性特性做出补偿来反映某些物理特性, 如光照强
度、光密度等;
②对比度增强: 调整图像的亮度、对比度, 以便观察;
③显示标定: 利用点运算使得图像在显示时能够突出所有用户感兴趣的特征;
④图像分割: 为图像添加轮廓线, 通常被用来辅助后续运算中的边界检测;
⑤图像裁剪: 将输出图像的灰度级限制在可用范围。
14、图像的代数运算
图像的代数运算图像的标准算术操作的实现方法, 是两幅输入图像之间进行点对点的加、
减、乘、除运算后得到输出图像的过程
15、图像的加法运算
图像相加一般用于对同一场景的多幅图像求平均效果( 平均是指效果而言, 并非算术平
均) , 以便有效地降低具有叠加性质的随机噪声
16、图像的减法运算
图像减法也称为差分方法, 是一种常用于检测图像变化及运动物体的图像处理方法
17、图像的乘法运算
两幅图像进行乘法运算可以实现掩模操作, 即屏蔽掉图像的某些部分。一幅图像乘以一
个常数通常称为缩放
18、图像的除法运算
图像除法运算又称为比率变换, 给出的是相应像素值的变化比率, 而不是每个像素的绝对
差异, 可用于校正成像设备的非线性影响
19、图像的几何运算
    ( 1 ) 图像的插值：
     设已知函数值为w1 , w2 , ?,
则未知点x 的函数值通过插值可以表示为:
f( x) = Σw h( x - xl)
其中h(・) 为插值核函数, wl 为权系数
1/2( xk - 1 + xk ) < x <1/2( xk + xk+ 1 )
    (2)图像邻域和块操作
    输出图像中的每个像素值都是对应的输入像素及其某个邻域内的像素共同决定的, 这种
图像运算称为邻域运算
滑动邻域操作, 经常被用于图像的线性滤波和二值形态操作。
    (3)图像分析:提取图像的结构信息。例如, 可以利用影像处理工具箱中
提供的edge 函数来探测边界。
*******灰度图像的边缘: edge 函数:BW = edge( I, method)
    BW = edge( I, method, thresh)
    用thresh 指定灵敏度阀值, 所有不强于thresh 的边缘都被忽略。
    BW = edge( I, method, thresh, direction)
    对于′sobel′和′prewitt′方法指定方向;
    direction 为字符串: ′horizontal′表示水平方向, ′vertical′表示垂直方向, ′both′两个方向( 缺
    省值) 。
******行四叉树分解: qtdecomp 函数??????????????????????????
******图像调整
      ------对比度调整函数: imadjust 函数
         该函数可用于调整灰度值或颜色图, 其用法为:
           J = imadjust( I, [ low high] , [ bottom top] , gamma)     gamma 用来指定
          描述I 和J 值关系曲线的形状; gamma < 1, 越亮输出值越加强; gamma > 1, 越亮输出值越减弱;
          缺省gamma = 1 , 表示线性变换。
      ---------brighten 函数
        该函数的用法为:
        brighten( beta)
        使现有颜色图变成更亮或更暗的图。如果0 < beta ≤1 , 则颜色图增亮; - 1≤beta < 0, 则颜
        色图变暗。brighten( beta) 可以使用brighten( - beta) 还原
*******BW = roicolor( A, low, high)
        其功能是: 按指定的灰度范围分割图像, 返回二值掩模BW, [ low high] 为所要选择区域的
       灰度范围。如果low 大于high, 则返回为空矩阵。
       BW = roicolor( A, v)
      其功能是: 按向量v 中指定的灰度值来选择区域。
      下面是一个按灰度分割图像中的目标的程序清单:
       I = imread( ′rice. tif′) ;
       BW = roicolor( I, 128, 255) ; % 选择图像灰度范围在128 和255 之间的像素。
       figure( 1) , imshow( I)
       figure( 2) , imshow( BW) ;
     